'use client'

import { useEffect, useState } from 'react'
import { useLanguage } from '@/contexts/LanguageContext'

interface DownloadModalProps {
  isOpen: boolean
  onClose: () => void
  cheat?: any
}

export default function DownloadModal({ isOpen, onClose, cheat }: DownloadModalProps) {
  const { t, language } = useLanguage()
  const [isVisible, setIsVisible] = useState(false)
  const [isClosing, setIsClosing] = useState(false)

  useEffect(() => {
    if (isOpen) {
      setIsVisible(true)
      setIsClosing(false)
    } else {
      setIsClosing(true)
      const timer = setTimeout(() => {
        setIsVisible(false)
      }, 600) // –í—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–∞–Ω–∏—è
      return () => clearTimeout(timer)
    }
  }, [isOpen])

  const handleClose = () => {
    setIsClosing(true)
    setTimeout(() => {
      onClose()
    }, 600)
  }

  if (!isOpen) return null

  const instructions = language === 'ru' ? [
    '1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞',
    '2. –ù–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª "–ò—Å–∫–ª—é—á–µ–Ω–∏—è" –∏–ª–∏ "–ò—Å–∫–ª—é—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤"',
    '3. –î–æ–±–∞–≤—å—Ç–µ –ø–∞–ø–∫—É —Å —á–∏—Ç–æ–º –≤ –∏—Å–∫–ª—é—á–µ–Ω–∏—è',
    '4. –û—Ç–∫–ª—é—á–∏—Ç–µ –∑–∞—â–∏—Ç—É –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
    '5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —á–∏—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
  ] : [
    '1. Open antivirus settings',
    '2. Find "Exclusions" or "File Exclusions" section',
    '3. Add cheat folder to exclusions',
    '4. Disable real-time protection',
    '5. Run cheat as administrator'
  ]

  const title = language === 'ru' ? '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ' : 'Installation Instructions'
  const subtitle = language === 'ru' 
    ? '–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —á–∏—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω—Ç–∏–≤–∏—Ä—É—Å' 
    : 'To ensure proper cheat operation, antivirus must be disabled'

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center">
      {/* Blurred background - –∫—Ä–∞—Å–∏–≤–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∏ –∏—Å—á–µ–∑–∞–Ω–∏–µ */}
      <div 
        className={`absolute inset-0 bg-black/50 backdrop-blur-md transition-all duration-700 ease-out ${
          isVisible && !isClosing ? 'opacity-100 backdrop-blur-md' : 'opacity-0 backdrop-blur-none'
        }`}
        onClick={handleClose}
      ></div>
      
      {/* Modal content - –∞–Ω–∏–º–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –±–ª—é—Ä–∞ */}
      <div className={`relative bg-gray-900 rounded-2xl p-8 max-w-2xl mx-4 border border-red-500/30 shadow-2xl transition-all duration-600 transform ${
        isVisible && !isClosing 
          ? 'opacity-100 scale-100 translate-y-0 delay-200' 
          : 'opacity-0 scale-95 translate-y-8'
      }`}>
        {/* Close button */}
        <button
          onClick={handleClose}
          className="absolute top-4 right-4 text-gray-400 hover:text-white transition-colors"
        >
          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>

        {/* Header */}
        <div className="text-center mb-8">
          <div className="text-6xl mb-4">üõ°Ô∏è</div>
          <h2 className="text-3xl font-bold text-white mb-2">
            {title}
          </h2>
          <p className="text-gray-400">
            {subtitle}
          </p>
        </div>

        {/* Instructions */}
        <div className="space-y-4 mb-8">
          {instructions.map((instruction, index) => (
            <div key={index} className="flex items-start space-x-3">
              <div className="flex-shrink-0 w-8 h-8 bg-red-600 rounded-full flex items-center justify-center text-white font-bold text-sm">
                {index + 1}
              </div>
              <p className="text-gray-300 leading-relaxed">
                {instruction}
              </p>
            </div>
          ))}
        </div>

        {/* Warning */}
        <div className="bg-red-500/10 border border-red-500/30 rounded-lg p-4 mb-6">
          <div className="flex items-center space-x-2 mb-2">
            <span className="text-red-400">‚ö†Ô∏è</span>
            <span className="text-red-400 font-semibold">
              {language === 'ru' ? '–í–∞–∂–Ω–æ!' : 'Important!'}
            </span>
          </div>
          <p className="text-gray-300 text-sm">
            {language === 'ru' 
              ? '–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —á–∏—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω—Ç–∏–≤–∏—Ä—É—Å.'
              : 'For proper cheat operation, antivirus must be completely disabled.'
            }
          </p>
        </div>

        {/* Buttons */}
        <div className="flex flex-col sm:flex-row gap-4">
          <button
            onClick={() => {
              if (cheat?.downloadUrl) {
                window.open(cheat.downloadUrl, '_blank')
              }
              handleClose()
            }}
            className="flex-1 px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-semibold rounded-lg transition-all duration-300 transform hover:scale-105"
          >
            {language === 'ru' ? '–ü–æ–Ω—è—Ç–Ω–æ, —Å–∫–∞—á–∞—Ç—å' : 'Got it, download'}
          </button>
          <button
            onClick={handleClose}
            className="flex-1 px-6 py-3 bg-transparent border-2 border-gray-600 hover:border-gray-500 text-gray-300 hover:text-white font-semibold rounded-lg transition-all duration-300"
          >
            {language === 'ru' ? '–û—Ç–º–µ–Ω–∞' : 'Cancel'}
          </button>
        </div>
      </div>
    </div>
  )
}
